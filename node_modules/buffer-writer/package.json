{
  "_args": [
    [
      {
        "raw": "buffer-writer@2.0.0",
        "scope": null,
        "escapedName": "buffer-writer",
        "name": "buffer-writer",
        "rawSpec": "2.0.0",
        "spec": "2.0.0",
        "type": "version"
      },
      "F:\\react-node\\postgres-express-react-node-tutorial\\node_modules\\pg"
    ]
  ],
  "_from": "buffer-writer@2.0.0",
  "_hasShrinkwrap": false,
  "_id": "buffer-writer@2.0.0",
  "_location": "/buffer-writer",
  "_nodeVersion": "10.9.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/buffer-writer_2.0.0_1541600244248_0.6647835120572403"
  },
  "_npmUser": {
    "name": "brianc",
    "email": "brian.m.carlson@gmail.com"
  },
  "_npmVersion": "6.2.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "buffer-writer@2.0.0",
    "scope": null,
    "escapedName": "buffer-writer",
    "name": "buffer-writer",
    "rawSpec": "2.0.0",
    "spec": "2.0.0",
    "type": "version"
  },
  "_requiredBy": [
    "/pg"
  ],
  "_resolved": "https://registry.npmjs.org/buffer-writer/-/buffer-writer-2.0.0.tgz",
  "_shasum": "ce7eb81a38f7829db09c873f2fbb792c0c98ec04",
  "_shrinkwrap": null,
  "_spec": "buffer-writer@2.0.0",
  "_where": "F:\\react-node\\postgres-express-react-node-tutorial\\node_modules\\pg",
  "author": {
    "name": "Brian M. Carlson"
  },
  "bugs": {
    "url": "https://github.com/brianc/node-buffer-writer/issues"
  },
  "dependencies": {},
  "description": "a fast, efficient buffer writer",
  "devDependencies": {
    "mocha": "5.2.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-a7ZpuTZU1TRtnwyCNW3I5dc0wWNC3VR9S++Ewyk2HHZdrO3CQJqSpd+95Us590V6AL7JqUAH2IwZ/398PmNFgw==",
    "shasum": "ce7eb81a38f7829db09c873f2fbb792c0c98ec04",
    "tarball": "https://registry.npmjs.org/buffer-writer/-/buffer-writer-2.0.0.tgz",
    "fileCount": 7,
    "unpackedSize": 13706,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb4vP0CRA9TVsSAnZWagAA+vAP/AnDhOaCJfyreAL0EINJ\nBZHo+oT51TnjhXBQvVt+jeTx15bEPpKGBixokln2Vz5GRL90tBdaCHHfUz4v\n9djgoBES7WAIAR8J7ctVXY1yjzIrVeqCDE2czxuwRylzXJc5vYS9rHUxyNqx\ny1oDYN3WzunEzKF+9X15+EAdCvH1XGGQLN2k3J5YPFfMfoeHSaNm0KboUiXv\n6Rx/PgarG97u4cKtD1+jeQD7uU1Fv+bQVHS1qkkhC9nVVtDdMcvFKWJnz0Qq\njsqS51OPnwbiP+I7mzBFQHd57z5E6xXQwXIw0fliCTVmigRgw9nbiZyg6cb4\n+KnIWZ95qsx4FfPU6pGkIdT+xFKR5Ak9NajLI5V0kYbxPYMX4Rl0HlkzKf5t\nnl48Zlj1WYqen+rJnfKb1m/iwhC0bHjpA8PaCCTcdgoJaWtQj9UcORUMAK8Y\nEQnmlxHAyRwAEZFIXOpG66utHxsU6Iw5Y/f7O69V2MpGRTWFwFKNFdRgSCpt\neF/bBDjlujsRZlaLd7Nvs8PagXUayH3xWJqvkjt0nNRsomx7ZlAEgbDNUH9r\nxu5jXlYIquBpx9N9HtwF/awTWadaQ2iK8XP5+4TLyul6wHvptVSBM3NjO89N\njdZ3FcyEwZR6+HLZ5o4AE5oKbwKCIvIIGx2AVt/qGtLeHqw7vsgp0gSQ3aXU\n04hf\r\n=YrKg\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=4"
  },
  "gitHead": "39d3adbd57b7e53c5e28ef972eb4b07590f38e99",
  "homepage": "https://github.com/brianc/node-buffer-writer#readme",
  "keywords": [
    "buffer",
    "writer",
    "builder"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "brianc",
      "email": "brian.m.carlson@gmail.com"
    }
  ],
  "name": "buffer-writer",
  "optionalDependencies": {},
  "readme": "# buffer-writer\n\n[![Build Status](https://secure.travis-ci.org/brianc/node-buffer-writer.png?branch=master)](http://travis-ci.org/brianc/node-buffer-writer)\n\nFast & efficient buffer writer used to keep memory usage low by internally recycling a single large buffer.\n\nUsed as the binary protocol writer in [node-postgres](https://github.com/brianc/node-postgres)\n\nSince postgres requires big endian encoding, this only writes big endian numbers for now, but can & probably will easily be extended to write little endian as well.\n\nI'll admit this has a few postgres specific things I might need to take out in the future, such as `addHeader`\n\n## api\n\n`var writer = new (require('buffer-writer')());`\n\n### writer.addInt32(num)\n\nWrites a 4-byte big endian binary encoded number to the end of the buffer.\n\n### writer.addInt16(num)\n\nWrites a 2-byte big endian binary encoded number to the end of the buffer.\n\n### writer.addCString(string)\n\nWrites a string to the buffer `utf8` encoded and adds a null character (`\\0`) at the end.\n\n### var buffer = writer.addHeader(char)\n\nWrites the 5 byte PostgreSQL required header to the beginning of the buffer. (1 byte for character, 1 BE Int32 for length of the buffer)\n\n### var buffer = writer.join()\n\nCollects all data in the writer and joins it into a single, new buffer.\n\n### var buffer = writer.flush(char)\n\nWrites the 5 byte postgres required message header, collects all data in the writer and joins it into a single, new buffer, and then resets the writer.\n\n## thoughts\n\nThis is kind of node-postgres specific.  If you're interested in using this for a more general purpose thing, lemme know.\nI would love to work with you on getting this more reusable for your needs.\n\n## license\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/brianc/node-buffer-writer.git"
  },
  "scripts": {
    "test": "mocha --throw-deprecation"
  },
  "version": "2.0.0"
}
