{
  "_args": [
    [
      {
        "raw": "apollo-server-express",
        "scope": null,
        "escapedName": "apollo-server-express",
        "name": "apollo-server-express",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "F:\\react-node\\postgres-express-react-node-tutorial\\server"
    ]
  ],
  "_from": "apollo-server-express",
  "_hasShrinkwrap": false,
  "_id": "apollo-server-express@2.9.4",
  "_location": "/apollo-server-express",
  "_nodeVersion": "10.16.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/apollo-server-express_2.9.4_1569344598998_0.346836586384194"
  },
  "_npmUser": {
    "name": "apollo-bot",
    "email": "npm@apollographql.com"
  },
  "_npmVersion": "lerna/3.16.4/node@v10.16.3+x64 (linux)",
  "_phantomChildren": {},
  "_requested": {
    "raw": "apollo-server-express",
    "scope": null,
    "escapedName": "apollo-server-express",
    "name": "apollo-server-express",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/apollo-server-express/-/apollo-server-express-2.9.4.tgz",
  "_shasum": "ae7ca0b70a644ba9fa5e3ac395d1e2d9a4b23522",
  "_shrinkwrap": null,
  "_spec": "apollo-server-express",
  "_where": "F:\\react-node\\postgres-express-react-node-tutorial\\server",
  "author": {
    "name": "opensource@apollographql.com"
  },
  "bugs": {
    "url": "https://github.com/apollographql/apollo-server/issues"
  },
  "dependencies": {
    "@apollographql/graphql-playground-html": "1.6.24",
    "@types/accepts": "^1.3.5",
    "@types/body-parser": "1.17.1",
    "@types/cors": "^2.8.4",
    "@types/express": "4.17.1",
    "accepts": "^1.3.5",
    "apollo-server-core": "^2.9.4",
    "apollo-server-types": "^0.2.4",
    "body-parser": "^1.18.3",
    "cors": "^2.8.4",
    "express": "^4.17.1",
    "graphql-subscriptions": "^1.0.0",
    "graphql-tools": "^4.0.0",
    "parseurl": "^1.3.2",
    "subscriptions-transport-ws": "^0.9.16",
    "type-is": "^1.6.16"
  },
  "description": "Production-ready Node.js GraphQL server for Express and Connect",
  "devDependencies": {
    "apollo-server-integration-testsuite": "^2.9.4"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-diX9n81E0tIJ0Sy2bHvDGPM9QsFBsZ76Nx/dszinY00ViyWG0yIAYEYWeRbsoKTeNDWWTvlMrh/3Eu2oaCIEhQ==",
    "shasum": "ae7ca0b70a644ba9fa5e3ac395d1e2d9a4b23522",
    "tarball": "https://registry.npmjs.org/apollo-server-express/-/apollo-server-express-2.9.4.tgz",
    "fileCount": 28,
    "unpackedSize": 67673,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdikxXCRA9TVsSAnZWagAAuLQP/0mtuN9KytrIY5SuRk8c\ntzeAn6fPabWjBte8CeLINcO8TDCd/bNXYTMJUdmVueOGHL7LNti0S3f+37h6\nTcddF6OvYvKLGkJJPPsCyRr4fiZ3E9IqmGP3jYuyyuLV9sBxO/23tMqWTjL4\noTK3kF4s+lFaSJDzHsJlOlsO8imjXSfBBZzNNuV3ro+Xhk20iFiorPGPERjy\nVfhVrIYGt6WYG+9GXsNBzphev2geIiBaKwocv4O20YdswzK6Xcm9g2zY26qv\n9dIOdfmsKLZfeqS/EH1hqJIGRWUgtbex1cFO5Xuf6ozSKC0a9T6H8x9ob/ic\nZodHv2XI34U/F63nVpVQtd/ob+E/ijH4SY7BCPwJ3J1RtIVs2e6cp0M2zsAQ\n17i7Bd9QIYPJn3xGgXxpfjw1Zv9PeqRqPHVS3DrnML5lqf0PTxoOVuXvBfLa\nKC4/nmaJgi1l0GuzfSIpM8crheFmFEx3IocDNiXIwZk4kiuUbpecuBt+h9d9\nHBe5S1LBbwQuZm00hDEmoVEPZ++5CUT177LjVLXPCiMnbjrgWpEmLRnVSzWS\nucUSKthcLAIo7mkOJZDnZchZ58EzcIkBJGRqO16pw+sH8nnAFRBzGKvyIsrD\nQXECGyBGJAdacsyT3TxDqHguiYe8kpt76EtNcR1+GZa9KQKmMGNHbNCgW0Pd\nqDtT\r\n=K3zA\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=6"
  },
  "gitHead": "6100fb5e0797cd1f578ded7cb77b60fac47e58e3",
  "homepage": "https://github.com/apollographql/apollo-server#readme",
  "keywords": [
    "GraphQL",
    "Apollo",
    "Server",
    "Express",
    "Connect",
    "Javascript"
  ],
  "license": "MIT",
  "main": "dist/index.js",
  "maintainers": [
    {
      "name": "apollo-bot",
      "email": "npm@apollographql.com"
    },
    {
      "name": "evanshauser",
      "email": "evanshauser@gmail.com"
    }
  ],
  "name": "apollo-server-express",
  "optionalDependencies": {},
  "peerDependencies": {
    "graphql": "^0.12.0 || ^0.13.0 || ^14.0.0"
  },
  "readme": "[![npm version](https://badge.fury.io/js/apollo-server-express.svg)](https://badge.fury.io/js/apollo-server-express) [![Build Status](https://circleci.com/gh/apollographql/apollo-server.svg?style=svg)](https://circleci.com/gh/apollographql/apollo-server) [![Join the community on Spectrum](https://withspectrum.github.io/badge/badge.svg)](https://spectrum.chat/apollo)\n\n\nThis is the Express and Connect integration of GraphQL Server. Apollo Server is a community-maintained open-source GraphQL server that works with many Node.js HTTP server frameworks. [Read the docs](https://www.apollographql.com/docs/apollo-server/). [Read the CHANGELOG.](https://github.com/apollographql/apollo-server/blob/master/CHANGELOG.md)\n\n```shell\nnpm install apollo-server-express\n```\n\n## Express\n\n```js\nconst express = require('express');\nconst { ApolloServer, gql } = require('apollo-server-express');\n\n// Construct a schema, using GraphQL schema language\nconst typeDefs = gql`\n  type Query {\n    hello: String\n  }\n`;\n\n// Provide resolver functions for your schema fields\nconst resolvers = {\n  Query: {\n    hello: () => 'Hello world!',\n  },\n};\n\nconst server = new ApolloServer({ typeDefs, resolvers });\n\nconst app = express();\nserver.applyMiddleware({ app });\n\napp.listen({ port: 4000 }, () =>\n  console.log(`ðŸš€ Server ready at http://localhost:4000${server.graphqlPath}`)\n);\n```\n\n## Connect\n\n```js\nconst connect = require('connect');\nconst { ApolloServer, gql } = require('apollo-server-express');\nconst query = require('qs-middleware');\n\n// Construct a schema, using GraphQL schema language\nconst typeDefs = gql`\n  type Query {\n    hello: String\n  }\n`;\n\n// Provide resolver functions for your schema fields\nconst resolvers = {\n  Query: {\n    hello: () => 'Hello world!',\n  },\n};\n\nconst server = new ApolloServer({ typeDefs, resolvers });\n\nconst app = connect();\nconst path = '/graphql';\n\napp.use(query());\nserver.applyMiddleware({ app, path });\n\napp.listen({ port: 4000 }, () =>\n  console.log(`ðŸš€ Server ready at http://localhost:4000${server.graphqlPath}`)\n);\n```\n\n> Note; `qs-middleware` is only required if running outside of Meteor\n\n## Principles\n\nGraphQL Server is built with the following principles in mind:\n\n* **By the community, for the community**: GraphQL Server's development is driven by the needs of developers\n* **Simplicity**: by keeping things simple, GraphQL Server is easier to use, easier to contribute to, and more secure\n* **Performance**: GraphQL Server is well-tested and production-ready - no modifications needed\n\nAnyone is welcome to contribute to GraphQL Server, just read [CONTRIBUTING.md](https://github.com/apollographql/apollo-server/blob/master/CONTRIBUTING.md), take a look at the [roadmap](https://github.com/apollographql/apollo-server/blob/master/ROADMAP.md) and make your first PR!\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "https://github.com/apollographql/apollo-server/tree/master/packages/apollo-server-express"
  },
  "types": "dist/index.d.ts",
  "version": "2.9.4"
}
