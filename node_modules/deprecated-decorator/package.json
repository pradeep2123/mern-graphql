{
  "_args": [
    [
      {
        "raw": "deprecated-decorator@^0.1.6",
        "scope": null,
        "escapedName": "deprecated-decorator",
        "name": "deprecated-decorator",
        "rawSpec": "^0.1.6",
        "spec": ">=0.1.6 <0.2.0",
        "type": "range"
      },
      "F:\\react-node\\postgres-express-react-node-tutorial\\node_modules\\graphql-tools"
    ]
  ],
  "_from": "deprecated-decorator@>=0.1.6 <0.2.0",
  "_id": "deprecated-decorator@0.1.6",
  "_inCache": true,
  "_location": "/deprecated-decorator",
  "_nodeVersion": "5.10.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/deprecated-decorator-0.1.6.tgz_1460445443854_0.7697029851842672"
  },
  "_npmUser": {
    "name": "vilic",
    "email": "i@vilic.info"
  },
  "_npmVersion": "3.8.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "deprecated-decorator@^0.1.6",
    "scope": null,
    "escapedName": "deprecated-decorator",
    "name": "deprecated-decorator",
    "rawSpec": "^0.1.6",
    "spec": ">=0.1.6 <0.2.0",
    "type": "range"
  },
  "_requiredBy": [
    "/graphql-tools"
  ],
  "_resolved": "https://registry.npmjs.org/deprecated-decorator/-/deprecated-decorator-0.1.6.tgz",
  "_shasum": "00966317b7a12fe92f3cc831f7583af329b86c37",
  "_shrinkwrap": null,
  "_spec": "deprecated-decorator@^0.1.6",
  "_where": "F:\\react-node\\postgres-express-react-node-tutorial\\node_modules\\graphql-tools",
  "author": {
    "name": "vilicvane"
  },
  "bugs": {
    "url": "https://github.com/vilic/deprecated-decorator/issues"
  },
  "dependencies": {},
  "description": "A simple decorator for deprecated methods and properties.",
  "devDependencies": {
    "chai": "latest",
    "mocha": "latest",
    "sinon": "latest",
    "source-map-support": "latest",
    "typescript": "latest"
  },
  "directories": {},
  "dist": {
    "shasum": "00966317b7a12fe92f3cc831f7583af329b86c37",
    "tarball": "https://registry.npmjs.org/deprecated-decorator/-/deprecated-decorator-0.1.6.tgz"
  },
  "gitHead": "a76ea08aa19e9fc86ffa75c9423be4df05c661b3",
  "homepage": "https://github.com/vilic/deprecated-decorator#readme",
  "keywords": [
    "deprecated",
    "decorator",
    "typescript",
    "babel",
    "es7"
  ],
  "license": "MIT",
  "main": "bld/index.js",
  "maintainers": [
    {
      "name": "vilic",
      "email": "i@vilic.info"
    }
  ],
  "name": "deprecated-decorator",
  "optionalDependencies": {},
  "readme": "[![NPM Package](https://badge.fury.io/js/deprecated-decorator.svg)](https://www.npmjs.com/package/deprecated-decorator)\n[![Build Status](https://travis-ci.org/vilic/deprecated-decorator.svg)](https://travis-ci.org/vilic/deprecated-decorator) \n\n# Deprecated Decorator\n\nA simple decorator for deprecated properties, methods and classes. It can also wrap normal functions via the old-fashioned way.\n\nTranspilers supported:\n\n- **TypeScript** with `experimentalDecorators` option enabled.\n- **Babel** with [transform-decorators-legacy](https://github.com/loganfsmyth/babel-plugin-transform-decorators-legacy) for version 6.x.\n\n## Install\n\n```sh\nnpm install deprecated-decorator --save\n```\n\n## API References\n\n```ts\nexport declare type DeprecatedDecorator = ClassDecorator & PropertyDecorator;\n\nexport interface DeprecatedOptions {\n    alternative?: string;\n    version?: string;\n    url?: string;\n}\n\nexport declare function deprecated(options?: DeprecatedOptions): DeprecatedDecorator;\nexport declare function deprecated(alternative?: string, version?: string, url?: string): DeprecatedDecorator;\n\nexport declare function deprecated<T extends Function>(fn: T): T;\nexport declare function deprecated<T extends Function>(options: DeprecatedOptions, fn: T): T;\nexport declare function deprecated<T extends Function>(alternative: string, fn: T): T;\nexport declare function deprecated<T extends Function>(alternative: string, version: string, fn: T): T;\nexport declare function deprecated<T extends Function>(alternative: string, version: string, url: string, fn: T): T;\n\nexport default deprecated;\n```\n\n## Usage\n\nDecorating a class will enable warning on constructor and static methods (including static getters and setters):\n\n```ts\nimport deprecated from 'deprecated-decorator';\n\n// alternative, since version, url\n@deprecated('Bar', '0.1.0', 'http://vane.life/')\nclass Foo {\n    static method() { }\n}\n```\n\nOr you can decorate methods respectively:\n\n```ts\nimport deprecated from 'deprecated-decorator';\n\nclass Foo {\n    @deprecated('otherMethod')\n    method() { }\n    \n    @deprecated({\n        alternative: 'otherProperty',\n        version: '0.1.2',\n        url: 'http://vane.life/'\n    })\n    get property() { }\n}\n```\n\nFor functions:\n\n```ts\nimport deprecated from 'deprecated-decorator';\n\nlet foo = deprecated({\n    alternative: 'bar',\n    version: '0.1.0'\n}, function foo() {\n    // ...\n});\n```\n\n## License\n\nMIT License.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/vilic/deprecated-decorator.git"
  },
  "scripts": {
    "build": "tsc",
    "test": "node node_modules/mocha/bin/_mocha"
  },
  "typings": "bld/index.d.ts",
  "version": "0.1.6"
}
