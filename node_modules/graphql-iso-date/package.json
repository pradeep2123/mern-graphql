{
  "_args": [
    [
      {
        "raw": "graphql-iso-date@^3.6.0",
        "scope": null,
        "escapedName": "graphql-iso-date",
        "name": "graphql-iso-date",
        "rawSpec": "^3.6.0",
        "spec": ">=3.6.0 <4.0.0",
        "type": "range"
      },
      "F:\\react-node\\postgres-express-react-node-tutorial\\node_modules\\graphile-build-pg"
    ]
  ],
  "_from": "graphql-iso-date@^3.6.0",
  "_hasShrinkwrap": false,
  "_id": "graphql-iso-date@3.6.1",
  "_location": "/graphql-iso-date",
  "_nodeVersion": "8.12.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/graphql-iso-date_3.6.1_1537093361668_0.40737003863873156"
  },
  "_npmUser": {
    "name": "excitement-engineer",
    "email": "dirkjanrutten@gmail.com"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "graphql-iso-date@^3.6.0",
    "scope": null,
    "escapedName": "graphql-iso-date",
    "name": "graphql-iso-date",
    "rawSpec": "^3.6.0",
    "spec": ">=3.6.0 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/graphile-build-pg"
  ],
  "_resolved": "https://registry.npmjs.org/graphql-iso-date/-/graphql-iso-date-3.6.1.tgz",
  "_shasum": "bd2d0dc886e0f954cbbbc496bbf1d480b57ffa96",
  "_shrinkwrap": null,
  "_spec": "graphql-iso-date@^3.6.0",
  "_where": "F:\\react-node\\postgres-express-react-node-tutorial\\node_modules\\graphile-build-pg",
  "author": {
    "name": "Dirk-Jan Rutten",
    "email": "dirkjanrutten@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/excitement-engineer/graphql-iso-date/issues"
  },
  "dependencies": {},
  "description": "A set of RFC 3339 compliant date/time GraphQL scalar types.",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "integrity": "sha512-AwFGIuYMJQXOEAgRlJlFL4H1ncFM8n8XmoVDTNypNOZyQ8LFDG2ppMFlsS862BSTCDcSUfHp8PD3/uJhv7t59Q==",
    "shasum": "bd2d0dc886e0f954cbbbc496bbf1d480b57ffa96",
    "tarball": "https://registry.npmjs.org/graphql-iso-date/-/graphql-iso-date-3.6.1.tgz",
    "fileCount": 17,
    "unpackedSize": 48983,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbni7yCRA9TVsSAnZWagAAHecP/3zQlj6hsEOiBWyxrcGB\nfA6oiLsGHyR4fLIcVPy9ibw4VSdln+t1Lg3iV8rcBe/OGCCkUFAyksuWx1Ly\nJZ26C4hUPPDhNEED5ZOUoDgbmycFkx9lALJEsjKoWpFu70vXMTAvQNNFrLLP\nZZsblZr3/89CJ1Eb60C3SHJlW28ZLsZF5bI4ZiEgQAPglNWBfPoxsEoHIaEo\nOn4Cd3k1yWk9cOiqzAEMOO5m4wVUo8VqpaFE3FHWo20HJoaHEP269D6DOnj6\nJl8bc/D2vUB+CMzM+WNdkLVq60J0xU9C+Yis0CnXP2qgDB6u8VdLwdeaPDUA\nk/5MaqWHrUQsAGz/KqshD7qabRfH+4VIuPJUJTX1g4/pqCgKifuAjwg8TX4d\nDxRqMc09922HuetXsDTWQvoqiul4ETXOCA2sFhY7DTuJ9AjFcRwZNH+g85n6\nFL+R9aCeu9qWoBHLwOJ7sEA7qPITxtZnfueca0ZzxT/ESoNhUAVH29gXsp+O\nkK8ybyi97vt2jERNSlOI/KMB6jeUAVIj8Hjk3NkRMDXvvcWO0d0E/rOGMIj9\n9DI843ypQSa/yKzGqIHyy8s2EzxHvdejurRO8e7vyO/fHx6nvPTaKI08Yis9\nJ6qXaLZJmUwaCbbPCz27I25WXO9smU9QobyeYgNkJ8Ck4TpLFZf35BFjJThh\nNblg\r\n=RdBG\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "files": [
    "dist",
    "README.md"
  ],
  "gitHead": "0cf47fac2af74094c467f9a4218ca27b3acdf4df",
  "homepage": "https://github.com/excitement-engineer/graphql-iso-date",
  "keywords": [
    "GraphQL",
    "Scalar",
    "Date",
    "Node",
    "ISO"
  ],
  "license": "MIT",
  "main": "dist/index.js",
  "maintainers": [
    {
      "name": "excitement-engineer",
      "email": "dirkjanrutten@gmail.com"
    }
  ],
  "name": "graphql-iso-date",
  "optionalDependencies": {},
  "peerDependencies": {
    "graphql": "^0.5.0 || ^0.6.0 || ^0.7.0 || ^0.8.0-b || ^0.9.0 || ^0.10.0 || ^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
  },
  "readme": "# GraphQL ISO Date\n\n[![npm version](https://badge.fury.io/js/graphql-iso-date.svg)](http://badge.fury.io/js/graphql-iso-date)\n[![Build Status](https://travis-ci.org/excitement-engineer/graphql-iso-date.svg?branch=master)](https://travis-ci.org/excitement-engineer/graphql-iso-date)\n[![codecov](https://codecov.io/gh/excitement-engineer/graphql-iso-date/branch/master/graph/badge.svg)](https://codecov.io/gh/excitement-engineer/graphql-iso-date)\n\nGraphQL ISO Date is a set of [RFC 3339](./rfc3339.txt) compliant date/time scalar types to be used with [graphQL.js](https://github.com/graphql/graphql-js).\n\n> RFC 3339 *\"defines a date and time format for use in Internet\nprotocols that is a profile of the ISO 8601 standard for\nrepresentation of dates and times using the Gregorian calendar.\"*\n\n> **Date and Time on the Internet: Timestamps, July 2002.**\n\nA basic understanding of [GraphQL](http://facebook.github.io/graphql/) and of the [graphQL.js](https://github.com/graphql/graphql-js) implementation is needed to provide context for this library.\n\nThis library contains the following scalars:\n\n- `Date`: A date string, such as 2007-12-03.\n- `Time`: A time string at UTC, such as 10:15:30Z\n- `DateTime`: A date-time string at UTC, such as 2007-12-03T10:15:30Z.\n\n## Getting started\n\nInstall `graphql-iso-date` using yarn\n\n```sh\nyarn add graphql-iso-date\n```\n\nOr using npm\n\n```sh\nnpm install --save graphql-iso-date\n```\n\nGraphQL ISO Date exposes 3 different date/time scalars that can be used in combination with [graphQL.js](https://github.com/graphql/graphql-js). Let's build a simple schema using the scalars included in this library and execute a query:\n\n```js\nimport {\n  graphql,\n  GraphQLObjectType,\n  GraphQLSchema,\n} from 'graphql';\n\nimport {\n  GraphQLDate,\n  GraphQLTime,\n  GraphQLDateTime\n} from 'graphql-iso-date';\n\nconst schema = new GraphQLSchema({\n  query: new GraphQLObjectType({\n    name: 'Query',\n    fields: {\n      birthdate: {\n        type: GraphQLDate,\n        //resolver can take a Date or date string.\n        resolve: () => new Date(1991, 11, 24)\n      },\n      openingNYSE: {\n        type: GraphQLTime,\n        //resolver can take a Date or time string.\n        resolve: () => new Date(Date.UTC(2017, 0, 10, 14, 30))\n      },\n      instant: {\n        type: GraphQLDateTime,\n        // resolver can take Date, date-time string or Unix timestamp (number).\n        resolve: () => new Date(Date.UTC(2017, 0, 10, 21, 33, 15, 233))\n      }\n    }\n  })\n});\n\nconst query = `\n  {\n    birthdate\n    openingNYSE\n    instant\n  }\n`;\n\ngraphql(schema, query).then(result => {\n\n    // Prints\n    // {\n    //   data: {\n    //     birthdate: '1991-12-24',\n    //     openingNYSE: '14:30:00.000Z',\n    //     instant: '2017-01-10T21:33:15.233Z'\n    //   }\n    // }\n    console.log(result);\n});\n```\n\n## Examples\n\nThis project includes several examples in the folder `/examples` explaining how to use the various scalars. You can also see some live editable examples on Launchpad:\n\n* [returning Date, Time, and DateTime](https://launchpad.graphql.com/vkvpvznr3)\n* [taking a Date as a query parameter](https://launchpad.graphql.com/9jr3wr88jr) (`graphql-tools` example: schema string combined with resolvers)\n\nRun the examples by downloading this project and running the following commands:\n\nInstall dependencies using yarn\n\n```sh\nyarn\n```\n\nOr npm\n\n```sh\nnpm install\n```\n\nRun the examples\n\n```\nnpm run examples\n```\n\n## Scalars\n\nThis section provides a detailed description of each of the scalars.\n\n > A reference is made to `coercion` in the description below. For further clarification on the meaning of this term, please refer to the GraphQL [spec](http://facebook.github.io/graphql/#sec-Scalars).\n\n### Date\n\nA date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the [RFC 3339](./rfc3339.txt) profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.\n\nThis scalar is a description of the date, as used for birthdays for example. It cannot represent an instant on the time-line.\n\n**Result Coercion**\n\nJavascript Date instances are coerced to an RFC 3339 compliant date string. Invalid Date instances raise a field error.\n\n**Input Coercion**\n\nWhen expected as an input type, only RFC 3339 compliant date strings are accepted. All other input values raise a query error indicating an incorrect type.\n\n### Time\n\nA time string at UTC, such as 10:15:30Z, compliant with the `full-time` format outlined in section 5.6 of the [RFC 3339](./rfc3339.txt) profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.\n\nThis scalar is a description of a time instant such as the opening bell of the New York Stock Exchange for example. It cannot represent an exact instant on the time-line.\n\nThis scalar ignores leap seconds (thereby assuming that a minute constitutes of 59 seconds), in this respect it diverges from the RFC 3339 profile.\n\nWhere an RFC 3339 compliant time string has a time-zone other than UTC, it is shifted to UTC. For example, the time string \"14:10:20+01:00\" is shifted to \"13:10:20Z\".\n\n**Result Coercion**\n\nJavascript Date instances are coerced to an RFC 3339 compliant time string by extracting the UTC time part. Invalid Date instances raise a field error.\n\n**Input Coercion**\n\nWhen expected as an input type, only RFC 3339 compliant time strings are accepted. All other input values raise a query error indicating an incorrect type.\n\n### DateTime\n\nA date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the [RFC 3339](./rfc3339.txt) profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.\n\nThis scalar is a description of an exact instant on the time-line such as the instant that a user account was created.\n\nThis scalar ignores leap seconds (thereby assuming that a minute constitutes of 59 seconds). In this respect it diverges from the RFC 3339 profile.\n\nWhere an RFC 3339 compliant date-time string has a time-zone other than UTC, it is shifted to UTC. For example, the date-time string \"2016-01-01T14:10:20+01:00\" is shifted to \"2016-01-01T13:10:20Z\".\n\n**Result Coercion**\n\nJavaScript Date instances and Unix timestamps (represented as 32-bit signed integers) are coerced to RFC 3339 compliant date-time strings. Invalid Date instances raise a field error.\n\n**Input Coercion**\n\nWhen expected as an input type, only RFC 3339 compliant date-time strings are accepted. All other input values raise a query error indicating an incorrect type.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/excitement-engineer/graphql-iso-date.git"
  },
  "version": "3.6.1"
}
