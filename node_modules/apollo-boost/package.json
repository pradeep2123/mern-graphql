{
  "_args": [
    [
      {
        "raw": "apollo-boost",
        "scope": null,
        "escapedName": "apollo-boost",
        "name": "apollo-boost",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "F:\\react-node\\postgres-express-react-node-tutorial"
    ]
  ],
  "_from": "apollo-boost",
  "_hasShrinkwrap": false,
  "_id": "apollo-boost@0.4.4",
  "_location": "/apollo-boost",
  "_nodeVersion": "10.15.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/apollo-boost_0.4.4_1565454236258_0.7639216525514563"
  },
  "_npmUser": {
    "name": "apollo-bot",
    "email": "npm@apollographql.com"
  },
  "_npmVersion": "lerna/3.16.4/node@v10.15.3+x64 (darwin)",
  "_phantomChildren": {},
  "_requested": {
    "raw": "apollo-boost",
    "scope": null,
    "escapedName": "apollo-boost",
    "name": "apollo-boost",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.4.4.tgz",
  "_shasum": "7c278dac6cb6fa3f2f710c56baddc6e3ae730651",
  "_shrinkwrap": null,
  "_spec": "apollo-boost",
  "_where": "F:\\react-node\\postgres-express-react-node-tutorial",
  "author": {
    "name": "Peggy Rayzis",
    "email": "peggy@apollographql.com"
  },
  "bugs": {
    "url": "https://github.com/apollographql/apollo-client/issues"
  },
  "contributors": [
    {
      "name": "James Baxley",
      "email": "james@apollographql.com"
    },
    {
      "name": "Sashko Stubailo",
      "email": "sashko@apollographql.com"
    },
    {
      "name": "James Burgess",
      "email": "jamesmillerburgess@gmail.com"
    }
  ],
  "dependencies": {
    "apollo-cache": "^1.3.2",
    "apollo-cache-inmemory": "^1.6.3",
    "apollo-client": "^2.6.4",
    "apollo-link": "^1.0.6",
    "apollo-link-error": "^1.0.3",
    "apollo-link-http": "^1.3.1",
    "graphql-tag": "^2.4.2",
    "ts-invariant": "^0.4.0",
    "tslib": "^1.9.3"
  },
  "description": "The easiest way to get started with Apollo Client",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "integrity": "sha512-ASngBvazmp9xNxXfJ2InAzfDwz65o4lswlEPrWoN35scXmCz8Nz4k3CboUXbrcN/G0IExkRf/W7o9Rg0cjEBqg==",
    "shasum": "7c278dac6cb6fa3f2f710c56baddc6e3ae730651",
    "tarball": "https://registry.npmjs.org/apollo-boost/-/apollo-boost-0.4.4.tgz",
    "fileCount": 16,
    "unpackedSize": 75402,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdTu+cCRA9TVsSAnZWagAA/LEP/AyXx+7aKDUa2RCNovJJ\n4wZziSr1PRPFvlieL8lUNzuD4l5gt8NbWQ8kxNu0jPw8Wkgbnt651o/hUYIY\nBMFfPFruyYY5UbEUpFZ746RmWuFvU/2zfWGC+wEftI0svcmAYY8bt88PdgkH\nsARoM9YYCj3lxEyiRMs0rGA8/bzi1Fs3ThivpuHTRffT/9HwRRr7m+gqzriE\nRq+ARNjVvGjQ++RCNXipDl0dKUQuN87QZQZoKgzG1SYMN8CUhDJ9Z1g14Iwy\nKbUuaTHgsRbzdHqECS6STUClNekNlxBSjWlOweS8PapPA32qWM55C+a2V3Oj\nKYFwB057JdzV2HO6UnOKrk5abHvYgD9JT0/2XueVfWenltXVZI7S9pELRkrP\n+5EAz3Z9tmVTkuK6TmesogjB5cm1oQk8Qrcji7tOP9jWqnLA/w+xzhhHJABL\nPKrsec3L0RHiNiEdOgXsn0K1QpSel6KQMK1uC/ozFAmVx/NWCa3UL0xUpOY5\nrGgx896pKT2bjRacUyZgaVxDFNIumw+bajFoCANCuAp83vfwe7JpecdUXxPy\nZlF5Ni/+dCe30b+oGqyUI0Pm9nebbOtyXV+PkUt1oGyJ7r2NlATi/VEWqVmf\nV501BJAr0eEXg8pIjT3FOkCMAE43N/ZzTdObAVHdbSSjb6V/+EMxNmTVoJ5K\npbzB\r\n=S3DD\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "d28dea2370e292f18979f25fe15258a59e159b4d",
  "homepage": "https://github.com/apollographql/apollo-client#readme",
  "license": "MIT",
  "main": "./lib/bundle.cjs.js",
  "maintainers": [
    {
      "name": "apollo-bot",
      "email": "npm@apollographql.com"
    },
    {
      "name": "benjamn",
      "email": "ben@benjamn.com"
    },
    {
      "name": "jbaxleyiii",
      "email": "james@meteor.com"
    },
    {
      "name": "peggyrayzis",
      "email": "peggyrayzis@gmail.com"
    }
  ],
  "module": "./lib/bundle.esm.js",
  "name": "apollo-boost",
  "optionalDependencies": {},
  "peerDependencies": {
    "graphql": "^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0"
  },
  "readme": "# apollo-boost\n\nThe fastest, easiest way to get started with Apollo Client!\n\nApollo Boost is a zero-config way to start using Apollo Client. It includes some sensible defaults, such as our recommended `InMemoryCache` and `HttpLink`, which come configured for you with our recommended settings.\n\n## Quick start\n\nFirst, install `apollo-boost`. If you don't have `graphql` & `react-apollo` already in your project, please install those too.\n\n```shell\nnpm i apollo-boost graphql react-apollo -S\n```\n\nNext, create your client. Once you create your client, hook it up to your app by passing it to the `ApolloProvider` exported from `react-apollo`.\n\n```js\nimport React from 'react';\nimport { render } from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\n// Pass your GraphQL endpoint to uri\nconst client = new ApolloClient({ uri: 'https://nx9zvp49q7.lp.gql.zone/graphql' });\n\nconst ApolloApp = AppComponent => (\n  <ApolloProvider client={client}>\n    <AppComponent />\n  </ApolloProvider>\n);\n\nrender(ApolloApp(App), document.getElementById('root'));\n```\n\nAwesome! Your ApolloClient is now connected to your app. Let's create our `<App />` component and make our first query:\n\n```js\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nconst GET_MOVIES = gql`\n  query {\n    movie(id: 1) {\n      id\n      title\n    }\n  }\n`\n\nconst App = () => (\n  <Query query={GET_MOVIES}>\n    {({ loading, error, data }) => {\n      if (loading) return <div>Loading...</div>;\n      if (error) return <div>Error :(</div>;\n\n      return (\n        <Movie title={data.movie.title} />\n      )\n    }}\n  </Query>\n)\n```\n\nTime to celebrate! ðŸŽ‰ You just made your first Query component. The Query component binds your GraphQL query to your UI so Apollo Client can take care of fetching your data, tracking loading & error states, and updating your UI via the `data` prop.\n\n## What's in Apollo Boost\n\nApollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:\n\n- `apollo-client`: Where all the magic happens\n- `apollo-cache-inmemory`: Our recommended cache\n- `apollo-link-http`: An Apollo Link for remote data fetching\n- `apollo-link-error`: An Apollo Link for error handling\n- `apollo-link-state`: An Apollo Link for local state management\n- `graphql-tag`: Exports the `gql` function for your queries & mutations\n\nThe awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest. For a full list of available options, please refer to the Apollo Boost [configuration options](https://www.apollographql.com/docs/react/essentials/get-started.html#configuration) documentation.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/apollographql/apollo-client.git"
  },
  "scripts": {
    "build": "tsc -b .",
    "bundle": "../../node_modules/rollup/bin/rollup -c rollup.config.js",
    "clean": "rm -rf coverage/* lib/*",
    "coverage": "jest --coverage",
    "lint": "tslint -c \"../../config/tslint.json\" -p tsconfig.json src/*.ts",
    "postbuild": "npm run bundle",
    "prebuild": "npm run clean",
    "prepare": "npm run lint && npm run build",
    "prepublishOnly": "npm run build",
    "test": "tsc -p tsconfig.json --noEmit && jest",
    "watch": "tsc -w -p ."
  },
  "sideEffects": false,
  "typings": "./lib/index.d.ts",
  "version": "0.4.4"
}
