{
  "_args": [
    [
      {
        "raw": "apollo-link@^1.2.3",
        "scope": null,
        "escapedName": "apollo-link",
        "name": "apollo-link",
        "rawSpec": "^1.2.3",
        "spec": ">=1.2.3 <2.0.0",
        "type": "range"
      },
      "F:\\react-node\\postgres-express-react-node-tutorial\\node_modules\\graphql-tools"
    ]
  ],
  "_from": "apollo-link@^1.2.3",
  "_hasShrinkwrap": false,
  "_id": "apollo-link@1.2.13",
  "_location": "/apollo-link",
  "_nodeVersion": "10.15.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/apollo-link_1.2.13_1567787444976_0.6169488925304145"
  },
  "_npmUser": {
    "name": "apollo-bot",
    "email": "npm@apollographql.com"
  },
  "_npmVersion": "lerna/3.16.4/node@v10.15.3+x64 (darwin)",
  "_phantomChildren": {},
  "_requested": {
    "raw": "apollo-link@^1.2.3",
    "scope": null,
    "escapedName": "apollo-link",
    "name": "apollo-link",
    "rawSpec": "^1.2.3",
    "spec": ">=1.2.3 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/graphql-tools"
  ],
  "_resolved": "https://registry.npmjs.org/apollo-link/-/apollo-link-1.2.13.tgz",
  "_shasum": "dff00fbf19dfcd90fddbc14b6a3f9a771acac6c4",
  "_shrinkwrap": null,
  "_spec": "apollo-link@^1.2.3",
  "_where": "F:\\react-node\\postgres-express-react-node-tutorial\\node_modules\\graphql-tools",
  "author": {
    "name": "Evans Hauser",
    "email": "evanshauser@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/apollographql/apollo-link/issues"
  },
  "contributors": [
    {
      "name": "James Baxley",
      "email": "james@meteor.com"
    },
    {
      "name": "Jonas Helfer",
      "email": "jonas@helfer.email"
    },
    {
      "name": "jon wong",
      "email": "j@jnwng.com"
    },
    {
      "name": "Sashko Stubailo",
      "email": "sashko@stubailo.com"
    }
  ],
  "dependencies": {
    "apollo-utilities": "^1.3.0",
    "ts-invariant": "^0.4.0",
    "tslib": "^1.9.3",
    "zen-observable-ts": "^0.8.20"
  },
  "description": "Flexible, lightweight transport layer for GraphQL",
  "devDependencies": {
    "@types/graphql": "14.2.3",
    "@types/jest": "24.0.18",
    "@types/node": "9.6.51",
    "graphql": "14.5.4",
    "graphql-tag": "2.10.1",
    "jest": "24.9.0",
    "rimraf": "2.7.1",
    "rollup": "1.20.3",
    "ts-jest": "22.4.6",
    "tslint": "5.17.0",
    "typescript": "3.0.3"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-+iBMcYeevMm1JpYgwDEIDt/y0BB7VWyvlm/7x+TIPNLHCTCMgcEgDuW5kH86iQZWo0I7mNwQiTOz+/3ShPFmBw==",
    "shasum": "dff00fbf19dfcd90fddbc14b6a3f9a771acac6c4",
    "tarball": "https://registry.npmjs.org/apollo-link/-/apollo-link-1.2.13.tgz",
    "fileCount": 42,
    "unpackedSize": 99234,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdcom1CRA9TVsSAnZWagAAmVsP/jNjTXPk+QEa02Ds8yi0\nvDZTJ26NLkQjYcqdtTMaChdgVvFjR+Ph9TDUt4NqjLunlIA0nYnfd5Lq52wf\n0mHqJZkKSFUhkEKN3lBf3a094267RtX/8K7Pv3IuvjHIQkteaauD9XprfUNa\nXtsYU9ZSJRpcQEhOGqnDKs8Qskca24QccJyDOfA1lbe403j3JQOU90PC6jnX\n0XzYJ+FBlTclE/LMYCSBn4jP++ZRLTxxft3qNp6scf7dZ8fZvKNj+Jo+mMbX\nJFl6fTTWs6YHYbcmx4ou+YkCmOa0yynRgV1RMNGSraB1D9KtRK6JMhJCbCSk\ngoXGSi80cWrMofgzXbiCGio2e/jOGLqlIIytE8hlzYjlsCipYOn8fRlcX9bQ\nA3L1rtNDC7TjP54kKjq+Mhvw0s1kbA6yGbupUdvBuHrq3vin+9vx8LIxVLXc\nzUJoJd9/qY2zouIHBTNjQas3RQJDfk8UwSYTnN3oV2kd3l3r/6hCflLnUYNS\nATnU7pLCWElY+gnnemHIYkzCCAtdMIK2XelWRpiVOAhiNdIOzF0jBd10WC1x\njX21NZlRFnqD250P0PghBsC0kI2dckm2SkjL3+Dcxd3YOcLu/2cnpQ5BM4CG\ngBHDrDuisC6a9CrAOfBgzt63tbQfJHNrh1sbHAZCssWUtTYbAVHPXzn0chNK\nmexd\r\n=lj01\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "74d412528dd474fc41ee0bf504e36e01d7e05e2b",
  "homepage": "https://github.com/apollographql/apollo-link#readme",
  "jest": {
    "transform": {
      ".(ts|tsx)": "ts-jest"
    },
    "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
    "moduleFileExtensions": [
      "ts",
      "tsx",
      "js",
      "json"
    ],
    "testURL": "http://localhost"
  },
  "license": "MIT",
  "main": "./lib/index.js",
  "maintainers": [
    {
      "name": "apollo-bot",
      "email": "npm@apollographql.com"
    },
    {
      "name": "evanshauser",
      "email": "evanshauser@gmail.com"
    },
    {
      "name": "jbaxleyiii",
      "email": "james@meteor.com"
    },
    {
      "name": "peggyrayzis",
      "email": "peggyrayzis@gmail.com"
    }
  ],
  "module": "./lib/bundle.esm.js",
  "name": "apollo-link",
  "optionalDependencies": {},
  "peerDependencies": {
    "graphql": "^0.11.3 || ^0.12.3 || ^0.13.0 || ^14.0.0"
  },
  "readme": "# apollo-link\r\n\r\n## Purpose\r\n\r\n`apollo-link` is a standard interface for modifying control flow of GraphQL requests and fetching GraphQL results, designed to provide a simple GraphQL client that is capable of extensions.\r\nThe targeted use cases of `apollo-link` are highlighted below:\r\n\r\n* fetch queries directly without normalized cache\r\n* network interface for Apollo Client\r\n* network interface for Relay Modern\r\n* fetcher for\r\n\r\nApollo Link is the interface for creating new links in your application.\r\n\r\nThe client sends a request as a method call to a link and can recieve one or more (in the case of subscriptions) responses from the server. The responses are returned using the Observer pattern.\r\n\r\n![Apollo Link Chain](https://cdn-images-1.medium.com/max/1600/1*62VLGUaU-9ULCoBCGvgdkQ.png)\r\n\r\nResults from the server can be provided by calling `next(result)` on the observer. In the case of a network/transport error (not a GraphQL Error) the `error(err)` method can be used to indicate a response will not be recieved. If multiple responses are not supported by the link, `complete()` should be called to inform the client no further data will be provided.\r\n\r\nIn the case of an intermediate link, a second argument to `request(operation, forward)` is the link to `forward(operation)` to. `forward` returns an observable and it can be returned directly or subscribed to.\r\n\r\n```js\r\nforward(operation).subscribe({\r\n  next: result => {\r\n    handleTheResult(result)\r\n  },\r\n  error: error => {\r\n    handleTheNetworkError(error)\r\n  },\r\n});\r\n```\r\n\r\n## Implementing a basic custom transport\r\n\r\n```js\r\nimport { ApolloLink, Observable } from 'apollo-link';\r\n\r\nexport class CustomApolloLink extends ApolloLink {\r\n  request(operation /*, forward*/) {\r\n    //Whether no one is listening anymore\r\n    let unsubscribed = false;\r\n\r\n    return new Observable(observer => {\r\n      somehowGetOperationToServer(operation, (error, result) => {\r\n        if (unsubscribed) return;\r\n        if (error) {\r\n          //Network error\r\n          observer.error(error);\r\n        } else {\r\n          observer.next(result);\r\n          observer.complete(); //If subscriptions not supported\r\n        }\r\n      });\r\n\r\n      function unsubscribe() {\r\n        unsubscribed = true;\r\n      }\r\n\r\n      return unsubscribe;\r\n    });\r\n  }\r\n}\r\n```\r\n\r\n## Installation\r\n\r\n`npm install apollo-link --save`\r\n\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/apollographql/apollo-link.git"
  },
  "scripts": {
    "build": "tsc && rollup -c",
    "clean": "rimraf lib/* && rimraf coverage/*",
    "coverage": "jest --coverage",
    "filesize": "../../scripts/minify",
    "lint": "tslint -c \"../../tslint.json\" -p tsconfig.json -c ../../tslint.json src/*.ts",
    "prebuild": "npm run clean",
    "prepare": "npm run build",
    "test": "npm run lint && jest",
    "watch": "tsc -w -p . & rollup -c -w"
  },
  "sideEffects": false,
  "typings": "./lib/index.d.ts",
  "version": "1.2.13"
}
