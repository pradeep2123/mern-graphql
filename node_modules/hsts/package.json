{
  "_args": [
    [
      {
        "raw": "hsts@2.2.0",
        "scope": null,
        "escapedName": "hsts",
        "name": "hsts",
        "rawSpec": "2.2.0",
        "spec": "2.2.0",
        "type": "version"
      },
      "F:\\react-node\\postgres-express-react-node-tutorial\\node_modules\\helmet"
    ]
  ],
  "_from": "hsts@2.2.0",
  "_hasShrinkwrap": false,
  "_id": "hsts@2.2.0",
  "_location": "/hsts",
  "_nodeVersion": "11.10.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/hsts_2.2.0_1552239097566_0.2629698030356704"
  },
  "_npmUser": {
    "name": "evanhahn",
    "email": "me@evanhahn.com"
  },
  "_npmVersion": "6.7.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "hsts@2.2.0",
    "scope": null,
    "escapedName": "hsts",
    "name": "hsts",
    "rawSpec": "2.2.0",
    "spec": "2.2.0",
    "type": "version"
  },
  "_requiredBy": [
    "/helmet"
  ],
  "_resolved": "https://registry.npmjs.org/hsts/-/hsts-2.2.0.tgz",
  "_shasum": "09119d42f7a8587035d027dda4522366fe75d964",
  "_shrinkwrap": null,
  "_spec": "hsts@2.2.0",
  "_where": "F:\\react-node\\postgres-express-react-node-tutorial\\node_modules\\helmet",
  "author": {
    "name": "Adam Baldwin",
    "email": "adam@npmjs.com",
    "url": "https://evilpacket.net"
  },
  "bugs": {
    "url": "https://github.com/helmetjs/hsts/issues",
    "email": "me@evanhahn.com"
  },
  "contributors": [
    {
      "name": "Evan Hahn",
      "email": "me@evanhahn.com",
      "url": "https://evanhahn.com"
    }
  ],
  "dependencies": {
    "depd": "2.0.0"
  },
  "description": "HTTP Strict Transport Security middleware.",
  "devDependencies": {
    "connect": "^3.6.6",
    "mocha": "^6.0.2",
    "standard": "^12.0.1",
    "supertest": "^4.0.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-ToaTnQ2TbJkochoVcdXYm4HOCliNozlviNsg+X2XQLQvZNI/kCHR9rZxVYpJB3UPcHz80PgxRyWQ7PdU1r+VBQ==",
    "shasum": "09119d42f7a8587035d027dda4522366fe75d964",
    "tarball": "https://registry.npmjs.org/hsts/-/hsts-2.2.0.tgz",
    "fileCount": 5,
    "unpackedSize": 7164,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJchUn6CRA9TVsSAnZWagAAUFsP/055lLAEmo+zTBdouHV4\nJtke9B7gZx9/vspHty2Yi0qgj5nb2/ga3mxPOgiRRkop1mfuLNNe5hD3lyk0\nIgPKBaafq3IBs/CD8cyme5KYr3bWp4l4ZCvtDIbq+/lY88NiHy6J7cgrFi15\nNX58HctptnKIFhBPFH2wGMNmXn3Wmz6PjF2jDcFf2pJGC1mlMboRtAb1z4BF\nJRbfr04WGScEzGNohW8WQpcA4pulrrnDV///+dS/91EUcgblUfDJDTm5+eHu\ntz5qPCi3fy48fD3/Z878SsljitZBKXPkytLmPYDyF53EbsXqepirnXnKWTcu\nJF+YCbv1R/GkitXSkNI0n+pznz2Xh1xKaMEy36o4xPt+5V3mH09y6aMv+2gU\ng4/wVU/P1/YpGfa+4rCTbZsqGnL/5ba16czME9RnydQNeyrXO17JePL90nGA\nGF5ZJI+KfFrZyrofe2dG8gqg3OdSpENS3g/xN1tqZgj0Ug3giuXS7PBxM4NN\nXOQ1z6cUYD2NClmnu4hQrosE57gE1zTRD9+ytV9i0CQz33O0osTe995+npJQ\nmWbLpDCKNJYHLP+ymnNm2UNS85E9cil+7/UrAlH35rQtzzfXhQBVQV0bGtoF\nErXoDSdT3Hp37Cmg9Qrfxm24hspBKLIAznnRh7Hxe1NCCzJsugJeuNyYjQRG\nYq0i\r\n=v0GH\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=4.0.0"
  },
  "gitHead": "d6305164306dbaad45006c9f4e4267fe9cdb30cb",
  "homepage": "https://helmetjs.github.io/docs/hsts/",
  "keywords": [
    "helmet",
    "security",
    "express",
    "connect",
    "hsts",
    "https"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "evanhahn",
      "email": "me@evanhahn.com"
    }
  ],
  "name": "hsts",
  "optionalDependencies": {},
  "readme": "HTTP Strict Transport Security middleware\n========================================\n[![Build Status](https://travis-ci.org/helmetjs/hsts.svg?branch=master)](https://travis-ci.org/helmetjs/hsts)\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg)](http://standardjs.com/)\n\nThis middleware adds the `Strict-Transport-Security` header to the response. This tells browsers, \"hey, only use HTTPS for the next period of time\". ([See the spec](http://tools.ietf.org/html/rfc6797) for more.) Note that the header won't tell users on HTTP to *switch* to HTTPS, it will just tell HTTPS users to stick around. You can enforce HTTPS with the [express-enforces-ssl](https://github.com/aredo/express-enforces-ssl) module.\n\nThis will set the Strict Transport Security header, telling browsers to visit by HTTPS for the next 180 days:\n\n```javascript\nconst hsts = require('hsts')\n\napp.use(hsts({\n  maxAge: 15552000  // 180 days in seconds\n}))\n// Strict-Transport-Security: max-age: 15552000; includeSubDomains\n```\n\nNote that the max age must be in seconds. *This was different in previous versions of this module!*\n\nThe `includeSubDomains` directive is present by default. If this header is set on *example.com*, supported browsers will also use HTTPS on *my-subdomain.example.com*. You can disable this:\n\n```javascript\napp.use(hsts({\n  maxAge: 15552000,\n  includeSubDomains: false\n}))\n```\n\nSome browsers let you submit your site's HSTS to be baked into the browser. You can add `preload` to the header with the following code. You can check your eligibility and submit your site at [hstspreload.org](https://hstspreload.org/).\n\n```javascript\napp.use(hsts({\n  maxAge: 31536000,        // Must be at least 1 year to be approved\n  includeSubDomains: true, // Must be enabled to be approved\n  preload: true\n}))\n```\n\nThis header will always be set because [the header is ignored in insecure HTTP](https://tools.ietf.org/html/rfc6797#section-8.1). You may wish to set it conditionally:\n\n```javascript\nconst hstsMiddleware = hsts({\n  maxAge: 1234000\n})\n\napp.use((req, res, next) => {\n  if (req.secure) {\n    hstsMiddleware(req, res, next)\n  } else {\n    next()\n  }\n})\n```\n\nThis header is [somewhat well-supported by browsers](https://caniuse.com/#feat=stricttransportsecurity).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/helmetjs/hsts.git"
  },
  "scripts": {
    "pretest": "standard --fix",
    "test": "mocha"
  },
  "standard": {
    "globals": [
      "describe",
      "beforeEach",
      "it"
    ]
  },
  "version": "2.2.0"
}
