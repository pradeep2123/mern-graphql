{
  "_args": [
    [
      {
        "raw": "graphile-build-pg@4.4.5",
        "scope": null,
        "escapedName": "graphile-build-pg",
        "name": "graphile-build-pg",
        "rawSpec": "4.4.5",
        "spec": "4.4.5",
        "type": "version"
      },
      "F:\\react-node\\postgres-express-react-node-tutorial\\node_modules\\postgraphile-core"
    ]
  ],
  "_from": "graphile-build-pg@4.4.5",
  "_hasShrinkwrap": false,
  "_id": "graphile-build-pg@4.4.5",
  "_location": "/graphile-build-pg",
  "_nodeVersion": "10.16.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/graphile-build-pg_4.4.5_1569252626737_0.0695665310252711"
  },
  "_npmUser": {
    "name": "benjie",
    "email": "npm@benjiegillam.com"
  },
  "_npmVersion": "lerna/3.16.4/node@v10.16.0+x64 (linux)",
  "_phantomChildren": {
    "pseudomap": "1.0.2"
  },
  "_requested": {
    "raw": "graphile-build-pg@4.4.5",
    "scope": null,
    "escapedName": "graphile-build-pg",
    "name": "graphile-build-pg",
    "rawSpec": "4.4.5",
    "spec": "4.4.5",
    "type": "version"
  },
  "_requiredBy": [
    "/postgraphile-core"
  ],
  "_resolved": "https://registry.npmjs.org/graphile-build-pg/-/graphile-build-pg-4.4.5.tgz",
  "_shasum": "6eeef87e43018629730f15da7ddf08a1d8a4d529",
  "_shrinkwrap": null,
  "_spec": "graphile-build-pg@4.4.5",
  "_where": "F:\\react-node\\postgres-express-react-node-tutorial\\node_modules\\postgraphile-core",
  "author": {
    "name": "Benjie Gillam",
    "email": "code@benjiegillam.com"
  },
  "bugs": {
    "url": "https://github.com/graphile/graphile-build/issues"
  },
  "dependencies": {
    "@graphile/lru": "4.4.5",
    "chalk": "^2.4.2",
    "debug": "^4.1.1",
    "graphile-build": "4.4.5",
    "graphql-iso-date": "^3.6.0",
    "jsonwebtoken": "^8.5.1",
    "lodash": ">=4 <5",
    "lru-cache": ">=4 <5",
    "pg-sql2": "4.4.5",
    "postgres-interval": "^1.2.0"
  },
  "description": "Build a GraphQL schema by reflection over a PostgreSQL schema. Easy to customize since it's built with plugins on graphile-build",
  "devDependencies": {
    "@babel/cli": "^7.0.0",
    "eslint_d": "^8.0.0",
    "flow-copy-source": "^1.2.0",
    "jest": "^24.8.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-jQzEiAmj8IPNsxXB4KNbr7uXnvg1y34ch4Gp6i48wg1U2Z/d/nfPFyhxQkvxNio2CXySDg+5klt1rXucVB2+Rw==",
    "shasum": "6eeef87e43018629730f15da7ddf08a1d8a4d529",
    "tarball": "https://registry.npmjs.org/graphile-build-pg/-/graphile-build-pg-4.4.5.tgz",
    "fileCount": 155,
    "unpackedSize": 1622729,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdiOUTCRA9TVsSAnZWagAA2VoP/2B22/X7z3sfLgwgvkZu\nGqbx6ABtG7rne/jAePhLd/wc2dXbWw88KAmqUHDpJvYXi/oydYGBcinCMErg\n67V60SmBfAAYL54Tcj7ksKyuq5ipbAqulm7pmNyc6JuJNaNp/M+H1FyGOT33\nqph726qLUf9pMpTIQJDjxFz79DZ4cw7ydDawioq/AVV6X1j4PS6t3v90CdPp\nSQ4YpkCSGFosMhC1JOl1jCfwt2I4YccfMiYlEXOym7W/ILhGc9nYpCcmONsy\ne0BlqR9cA2R00xsQUFMWDueVXKxUHTmkEI7nXiK7lfsCJrYIEnAs1XlJ/G/I\n+Itkh0LqoTafG5C17VB63X3/I6BCIZ2im7XvO+pKpnO8sZbIcRqWZSHa2jUb\nA1fBczgVNI5HKUj9QVcualOodgVBVi8eRQ+HhRy+7UTF+uweerIQm3QpACBa\nbYaAshQTzMdeYv7pPfcJmrhPmDPYgkY5MhTYGKCSzUzRtEKL1u5u8Tu6KvjY\nCidmFR/WCig+Dom5Fx2FjoDJiZU+xQEL4nI13D98nTV56nAT5SESe/qMfUhz\nUUpjUEBglPcyWoQGU41UWpMc5XmolSJEgYbi+tjwXy34pNdXpj98eFkg7EjC\nX11pbG8u+5c8iJftGWx2qPgIE09L0FuKLPNHlbm7IlEGbMrEnK77+QxWx6RW\nmSK1\r\n=S8+a\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=8.6"
  },
  "files": [
    "node8plus",
    "res",
    "index.js"
  ],
  "gitHead": "b0e19c73f1f78c62c4be1a2974a4f2404c538aa5",
  "homepage": "https://github.com/graphile/graphile-build/tree/master/packages/graphile-build-pg",
  "jest": {
    "transform": {
      "^.+\\.jsx?$": "../../.jest-wrapper.js"
    },
    "testRegex": "__tests__/.*\\.test\\.js$"
  },
  "keywords": [
    "graphile",
    "graphql",
    "engine",
    "pg",
    "postgres",
    "postgresql",
    "gql",
    "generate",
    "reflection",
    "build",
    "schema",
    "apollo",
    "relay",
    "plugins",
    "extensible"
  ],
  "license": "MIT",
  "main": "node8plus/index.js",
  "maintainers": [
    {
      "name": "benjie",
      "email": "npm@benjiegillam.com"
    }
  ],
  "name": "graphile-build-pg",
  "optionalDependencies": {},
  "peerDependencies": {
    "pg": ">=6.1.0 <8"
  },
  "readme": "# graphile-build-pg\n\n<span class=\"badge-patreon\"><a href=\"https://patreon.com/benjie\" title=\"Support Graphile development on Patreon\"><img src=\"https://img.shields.io/badge/sponsor-via%20Patreon-orange.svg\" alt=\"Patreon sponsor button\" /></a></span>\n[![Discord chat room](https://img.shields.io/discord/489127045289476126.svg)](http://discord.gg/graphile)\n[![Package on npm](https://img.shields.io/npm/v/graphile-build-pg.svg?style=flat)](https://www.npmjs.com/package/graphile-build-pg)\n![MIT license](https://img.shields.io/npm/l/graphile-build-pg.svg)\n[![Follow](https://img.shields.io/badge/twitter-@GraphileHQ-blue.svg)](https://twitter.com/GraphileHQ)\n\n`graphile-build-pg` is a collection of Graphile Engine plugins that allow you\nto extend your GraphQL schema with high-performance types and fields based on\nresources found in your PostgreSQL database schema.\n\n<!-- SPONSORS_BEGIN -->\n\n## Crowd-funded open-source software\n\nTo help us develop this software sustainably under the MIT license, we ask\nall individuals and businesses that use it to help support its ongoing\nmaintenance and development via sponsorship.\n\n### [Click here to find out more about sponsors and sponsorship.](https://www.graphile.org/sponsor/)\n\nAnd please give some love to our featured sponsors ðŸ¤©:\n\n<table><tr>\n<td align=\"center\"><a href=\"http://chads.website/\"><img src=\"https://www.graphile.org/images/sponsors/chadf.png\" width=\"90\" height=\"90\" alt=\"Chad Furman\" /><br />Chad Furman</a></td>\n<td align=\"center\"><a href=\"https://timescale.com/\"><img src=\"https://www.graphile.org/images/sponsors/timescale.svg\" width=\"90\" height=\"90\" alt=\"Timescale\" /><br />Timescale</a></td>\n</tr></table>\n\n<!-- SPONSORS_END -->\n\n## About\n\nThanks to Graphile Engine's advanced [query\nlook-ahead](https://www.graphile.org/graphile-build/look-ahead/) features,\nthe plugins in this package do not exhibit the N+1 query problem common in\nmany database-based GraphQL APIs. For all but the flattest GraphQL queries\nthese plugins typically outperform `DataLoader`-based solutions.\n\nAn example of an application built on `graphile-build-pg` is\n[PostGraphile](https://github.com/graphile/postgraphile) which with one\ncommand connects to your PostgreSQL database and provides a full highly\nperformant standards-compliant GraphQL API.\n\n**It is recommended that you use PostGraphile directly unless you really want\nto get low level access to this library.**\n\nIf you prefer to use the plugins yourself it's advised that you use the\n`defaultPlugins` export from `graphile-build-pg` and then create a new array\nbased on that into which you may insert or remove specific plugins. This is\nbecause it is ordered in a way to ensure the plugins work correctly (and we\nmay still split up or restructure the plugins).\n\n### Export: `defaultPlugins`\n\nAn array of graphql-build plugins in the correct order to generate a\nwell-thought-out GraphQL object tree based on your PostgreSQL schema. This is\nthe array that `postgraphile-core` uses.\n\n### Manual usage\n\n```js\nimport { defaultPlugins, getBuilder } from \"graphile-build\";\nimport { defaultPlugins as pgDefaultPlugins } from \"graphile-build-pg\";\n\nasync function getSchema(\n  pgConfig = process.env.DATABASE_URL,\n  pgSchemas = [\"public\"],\n  additionalPlugins = []\n) {\n  return getBuilder(\n    [...defaultPlugins, ...pgDefaultPlugins, ...additionalPlugins],\n    {\n      pgConfig,\n      pgSchemas,\n      pgExtendedTypes: true,\n    }\n  );\n}\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/graphile/graphile-build.git"
  },
  "scripts": {
    "prepack": "mkdir -p node8plus && babel --root-mode upward --copy-files -s true --out-dir node8plus src && flow-copy-source src node8plus",
    "test": "jest",
    "watch": "mkdir -p node8plus && babel --root-mode upward --copy-files -s true --watch --out-dir node8plus src"
  },
  "types": "node8plus/index.d.ts",
  "version": "4.4.5"
}
